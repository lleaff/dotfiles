
############################################################
# TERM
defaultTerm='xterm-256color'

set -g default-terminal $defaultTerm

# Sane scrolling
set -g terminal-overrides $defaultTerm'*:smcup@:rmcup@'
# Mouse
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Key bindings
############################################################
# Prefix to tmux commands
unbind C-b
set -g prefix C-]

# =Vim bindings
# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
# vim-keys.conf, v1.2 2010/09/12 - By Daniel Thau.  Public domain.
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"


# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind H swap-pane -D
bind J swap-pane -D
bind K swap-pane -U
bind L swap-pane -U

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind , resize-pane -L 8
bind . resize-pane -R 8
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 5
bind + resize-pane -U 5
bind = resize-pane -U 5
bind q resize-pane -x 86 # Resize pane to be 86 columns wide
# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt
# vi-style controls for copy mode
setw -g mode-keys vi

bind ^d kill-pane

bind l select-pane -R

### Windows
bind t new-window -c "#{pane_current_path}"
bind b previous-window
bind n next-window
# Move window to left-right
bind C-b swap-window -t -1
bind C-n swap-window -t +1
bind r command-prompt 'rename-window %%'

# Use emacs/readline style bindings when entering tmux commands
set -g status-keys emacs

bind R source ~/.tmux.conf

#Send the same command to all panes/windows/sessions
#http://kaushalmodi.github.io/2014/03/06/send-a-command-to-every-pane-slash-window-slash-session-in-tmux/
bind    E command-prompt -p "Command:" \
"run \"tmux list-sessions -F '##{session_name}' | xargs -I SESS \
tmux list-windows -t SESS -F 'SESS:##{window_index}' | xargs -I SESS_WIN \
tmux list-panes -t SESS_WIN -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
tmux send-keys -t SESS_WIN_PANE '%1' Enter\""

# =Colors
############################################################
set -g status-bg black
set -g status-fg brightblack
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g pane-active-border-bg default
set -g pane-active-border-fg green
#set -g pane-active-border-style fg=black
set -g pane-border-bg default
set -g pane-border-fg default
#set -g pane-border-style default

# "tabs" aka windows
setw -g window-status-current-bg brightblack
setw -g window-status-current-fg black

# =Status Bar
############################################################
# enable UTF-8 support in status bar
set -g status-utf8 on
# set refresh interval for status bar
set -g status-interval 30
# center the status bar
set -g status-justify left
# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left " "
#set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default]'
# show hostname, date, time, and battery in right status bar
#set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M\
#[fg=red]#(battery discharging)#[default]#(battery charging)'

# "tabs" aka windows
# #I = window number, #W = window name
setw -g window-status-format "  #I: #W  "
setw -g window-status-current-format "  #I: #W  "

set -g status-right-length 200
#set status-right '"#{=22:pane_title}" '
set -g status-right '#{pane_current_path}  '

# =Other
############################################################
# Fix issue with evil-mode in emacs
set -s -g escape-time 0

bind-key y   new-window -n "emacs"  "emacsclient -nw"
bind-key C-y split-window "emacsclient -nw"

# Start windows and panes at 1, not 0
setw -g base-index 1
setw -g pane-base-index 1

# Original grep: '(^|\/)vim(diff)?$|emacs.*$'
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)emacs.*$' && tmux send-keys C-M-z h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)emacs.*$' && tmux send-keys C-M-z j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)emacs.*$' && tmux send-keys C-M-z k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)emacs.*$' && tmux send-keys C-M-z l) || tmux select-pane -R"

# =Preserve Working Dir
############################################################
# Run below command in vim/spacemacs to append pane_current_path to all occurences
#%s/\(\(split-window\|new-window\)\([^{"]*\)\)$/\1 -c "#{pane_current_path}"/

bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# =Default settings
############################################################
#destroy-unattached off
#detach-on-destroy on
#display-panes-time 1000
#display-time 750
#history-limit 2000
#lock-after-time 0
#lock-server on
#message-attr none
#message-bg yellow
#message-command-attr none
#message-command-bg black
#message-command-fg yellow
#message-command-style fg=yellow,bg=black
#message-fg black
#message-limit 20
#message-style fg=black,bg=yellow
#mouse-resize-pane off
#mouse-select-pane off
#mouse-select-window off
#mouse-utf8 on
#prefix2 none
#renumber-windows off
#repeat-time 500
#set-remain-on-exit off
#set-titles off
#set-titles-string "#S:#I:#W - "#T""
#status on
#status-attr none
#status-bg green
#status-fg black
#status-interval 15
#status-justify left
#status-keys emacs
#status-left "[#S]"
#status-left-attr none
#status-left-bg default
#status-left-fg default
#status-left-length 10
#status-left-style default
#status-position bottom
#status-right ""#{=22:pane_title}" %H:%M %d-%b-%y"
#status-right-attr none
#status-right-bg default
#status-right-fg default
#status-right-length 40
#status-right-style default
#status-style fg=black,bg=green
#status-utf8 on
#terminal-overrides "*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E[%p1%d q:Se=\E[2 q,screen*:XT"
#update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
#visual-activity off
#visual-bell off
#visual-content off
#visual-silence off
#word-separators " -_@"
